package com.dream.myliu.liangwarehouse.greendao;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import com.dream.myliu.liangwarehouse.greendao.DarenDataDao;
import com.dream.myliu.liangwarehouse.greendao.SearchDataDao;
import com.dream.myliu.liangwarehouse.greendao.DarenPersonDataEtyDao;
import com.dream.myliu.liangwarehouse.greendao.DarenRecmEtyDao;
import com.dream.myliu.liangwarehouse.greendao.CateDataEtyDao;
import com.dream.myliu.liangwarehouse.greendao.CateItemsEtyDao;
import com.dream.myliu.liangwarehouse.greendao.CateCoverEtyDao;
import com.dream.myliu.liangwarehouse.greendao.CateChildEntityDao;
import com.dream.myliu.liangwarehouse.greendao.SpecilDataDao;
import com.dream.myliu.liangwarehouse.greendao.ShareDataEtyDao;
import com.dream.myliu.liangwarehouse.greendao.BrandDataEtyDao;
import com.dream.myliu.liangwarehouse.greendao.BrandItemDao;
import com.dream.myliu.liangwarehouse.greendao.BrandLogoDao;
import com.dream.myliu.liangwarehouse.greendao.BrandCategoryDao;
import com.dream.myliu.liangwarehouse.greendao.CateListDataEtyDao;
import com.dream.myliu.liangwarehouse.greendao.CateDetailEtyDao;
import com.dream.myliu.liangwarehouse.greendao.CateDetDataEtyDao;
import com.dream.myliu.liangwarehouse.greendao.GoodsBrandInfoEtyDao;
import com.dream.myliu.liangwarehouse.greendao.GoodsGuideEtyDao;
import com.dream.myliu.liangwarehouse.greendao.BrandIntentEtyDao;
import com.dream.myliu.liangwarehouse.greendao.BrandIntentLogoEtyDao;
import com.dream.myliu.liangwarehouse.greendao.BrandIntentGoodsEtyDao;
import com.dream.myliu.liangwarehouse.greendao.BrandIntentGoodsImgEtyDao;
import com.dream.myliu.liangwarehouse.greendao.UserGoodsCartEtyDao;
import com.dream.myliu.liangwarehouse.greendao.GoodsOrderEtyDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 1): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 1;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        DarenDataDao.createTable(db, ifNotExists);
        SearchDataDao.createTable(db, ifNotExists);
        DarenPersonDataEtyDao.createTable(db, ifNotExists);
        DarenRecmEtyDao.createTable(db, ifNotExists);
        CateDataEtyDao.createTable(db, ifNotExists);
        CateItemsEtyDao.createTable(db, ifNotExists);
        CateCoverEtyDao.createTable(db, ifNotExists);
        CateChildEntityDao.createTable(db, ifNotExists);
        SpecilDataDao.createTable(db, ifNotExists);
        ShareDataEtyDao.createTable(db, ifNotExists);
        BrandDataEtyDao.createTable(db, ifNotExists);
        BrandItemDao.createTable(db, ifNotExists);
        BrandLogoDao.createTable(db, ifNotExists);
        BrandCategoryDao.createTable(db, ifNotExists);
        CateListDataEtyDao.createTable(db, ifNotExists);
        CateDetailEtyDao.createTable(db, ifNotExists);
        CateDetDataEtyDao.createTable(db, ifNotExists);
        GoodsBrandInfoEtyDao.createTable(db, ifNotExists);
        GoodsGuideEtyDao.createTable(db, ifNotExists);
        BrandIntentEtyDao.createTable(db, ifNotExists);
        BrandIntentLogoEtyDao.createTable(db, ifNotExists);
        BrandIntentGoodsEtyDao.createTable(db, ifNotExists);
        BrandIntentGoodsImgEtyDao.createTable(db, ifNotExists);
        UserGoodsCartEtyDao.createTable(db, ifNotExists);
        GoodsOrderEtyDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        DarenDataDao.dropTable(db, ifExists);
        SearchDataDao.dropTable(db, ifExists);
        DarenPersonDataEtyDao.dropTable(db, ifExists);
        DarenRecmEtyDao.dropTable(db, ifExists);
        CateDataEtyDao.dropTable(db, ifExists);
        CateItemsEtyDao.dropTable(db, ifExists);
        CateCoverEtyDao.dropTable(db, ifExists);
        CateChildEntityDao.dropTable(db, ifExists);
        SpecilDataDao.dropTable(db, ifExists);
        ShareDataEtyDao.dropTable(db, ifExists);
        BrandDataEtyDao.dropTable(db, ifExists);
        BrandItemDao.dropTable(db, ifExists);
        BrandLogoDao.dropTable(db, ifExists);
        BrandCategoryDao.dropTable(db, ifExists);
        CateListDataEtyDao.dropTable(db, ifExists);
        CateDetailEtyDao.dropTable(db, ifExists);
        CateDetDataEtyDao.dropTable(db, ifExists);
        GoodsBrandInfoEtyDao.dropTable(db, ifExists);
        GoodsGuideEtyDao.dropTable(db, ifExists);
        BrandIntentEtyDao.dropTable(db, ifExists);
        BrandIntentLogoEtyDao.dropTable(db, ifExists);
        BrandIntentGoodsEtyDao.dropTable(db, ifExists);
        BrandIntentGoodsImgEtyDao.dropTable(db, ifExists);
        UserGoodsCartEtyDao.dropTable(db, ifExists);
        GoodsOrderEtyDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(DarenDataDao.class);
        registerDaoClass(SearchDataDao.class);
        registerDaoClass(DarenPersonDataEtyDao.class);
        registerDaoClass(DarenRecmEtyDao.class);
        registerDaoClass(CateDataEtyDao.class);
        registerDaoClass(CateItemsEtyDao.class);
        registerDaoClass(CateCoverEtyDao.class);
        registerDaoClass(CateChildEntityDao.class);
        registerDaoClass(SpecilDataDao.class);
        registerDaoClass(ShareDataEtyDao.class);
        registerDaoClass(BrandDataEtyDao.class);
        registerDaoClass(BrandItemDao.class);
        registerDaoClass(BrandLogoDao.class);
        registerDaoClass(BrandCategoryDao.class);
        registerDaoClass(CateListDataEtyDao.class);
        registerDaoClass(CateDetailEtyDao.class);
        registerDaoClass(CateDetDataEtyDao.class);
        registerDaoClass(GoodsBrandInfoEtyDao.class);
        registerDaoClass(GoodsGuideEtyDao.class);
        registerDaoClass(BrandIntentEtyDao.class);
        registerDaoClass(BrandIntentLogoEtyDao.class);
        registerDaoClass(BrandIntentGoodsEtyDao.class);
        registerDaoClass(BrandIntentGoodsImgEtyDao.class);
        registerDaoClass(UserGoodsCartEtyDao.class);
        registerDaoClass(GoodsOrderEtyDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}
