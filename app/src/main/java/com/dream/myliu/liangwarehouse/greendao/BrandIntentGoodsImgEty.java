package com.dream.myliu.liangwarehouse.greendao;

import com.dream.myliu.liangwarehouse.greendao.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table "BRAND_INTENT_GOODS_IMG_ETY".
 */
public class BrandIntentGoodsImgEty {

    private String url;
    private Long brand_intent_img_id;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient BrandIntentGoodsImgEtyDao myDao;

    private BrandIntentGoodsEty brandIntentGoodsEty;
    private Long brandIntentGoodsEty__resolvedKey;


    public BrandIntentGoodsImgEty() {
    }

    public BrandIntentGoodsImgEty(Long brand_intent_img_id) {
        this.brand_intent_img_id = brand_intent_img_id;
    }

    public BrandIntentGoodsImgEty(String url, Long brand_intent_img_id) {
        this.url = url;
        this.brand_intent_img_id = brand_intent_img_id;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getBrandIntentGoodsImgEtyDao() : null;
    }

    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    public Long getBrand_intent_img_id() {
        return brand_intent_img_id;
    }

    public void setBrand_intent_img_id(Long brand_intent_img_id) {
        this.brand_intent_img_id = brand_intent_img_id;
    }

    /** To-one relationship, resolved on first access. */
    public BrandIntentGoodsEty getBrandIntentGoodsEty() {
        Long __key = this.brand_intent_img_id;
        if (brandIntentGoodsEty__resolvedKey == null || !brandIntentGoodsEty__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            BrandIntentGoodsEtyDao targetDao = daoSession.getBrandIntentGoodsEtyDao();
            BrandIntentGoodsEty brandIntentGoodsEtyNew = targetDao.load(__key);
            synchronized (this) {
                brandIntentGoodsEty = brandIntentGoodsEtyNew;
            	brandIntentGoodsEty__resolvedKey = __key;
            }
        }
        return brandIntentGoodsEty;
    }

    public void setBrandIntentGoodsEty(BrandIntentGoodsEty brandIntentGoodsEty) {
        synchronized (this) {
            this.brandIntentGoodsEty = brandIntentGoodsEty;
            brand_intent_img_id = brandIntentGoodsEty == null ? null : brandIntentGoodsEty.getBrand_intent_goods_id();
            brandIntentGoodsEty__resolvedKey = brand_intent_img_id;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
