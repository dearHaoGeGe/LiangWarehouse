package com.dream.myliu.liangwarehouse.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.dream.myliu.liangwarehouse.greendao.ShareDataEty;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "SHARE_DATA_ETY".
*/
public class ShareDataEtyDao extends AbstractDao<ShareDataEty, Long> {

    public static final String TABLENAME = "SHARE_DATA_ETY";

    /**
     * Properties of entity ShareDataEty.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property _id_share = new Property(0, Long.class, "_id_share", true, "_ID_SHARE");
        public final static Property Goods_id = new Property(1, String.class, "goods_id", false, "GOODS_ID");
        public final static Property Goods_image = new Property(2, String.class, "goods_image", false, "GOODS_IMAGE");
        public final static Property Goods_name = new Property(3, String.class, "goods_name", false, "GOODS_NAME");
        public final static Property Price = new Property(4, Integer.class, "price", false, "PRICE");
        public final static Property Owner_id = new Property(5, String.class, "owner_id", false, "OWNER_ID");
        public final static Property Comment_count = new Property(6, String.class, "comment_count", false, "COMMENT_COUNT");
        public final static Property Like_count = new Property(7, String.class, "like_count", false, "LIKE_COUNT");
        public final static Property Liked = new Property(8, Integer.class, "liked", false, "LIKED");
        public final static Property Sale_by = new Property(9, String.class, "sale_by", false, "SALE_BY");
        public final static Property Goods_url = new Property(10, String.class, "goods_url", false, "GOODS_URL");
        public final static Property Is_gift = new Property(11, Integer.class, "is_gift", false, "IS_GIFT");
        public final static Property Discount_price = new Property(12, Integer.class, "discount_price", false, "DISCOUNT_PRICE");
        public final static Property Coupon_flag = new Property(13, Boolean.class, "coupon_flag", false, "COUPON_FLAG");
        public final static Property Promotion_imgurl = new Property(14, String.class, "promotion_imgurl", false, "PROMOTION_IMGURL");
    };


    public ShareDataEtyDao(DaoConfig config) {
        super(config);
    }
    
    public ShareDataEtyDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"SHARE_DATA_ETY\" (" + //
                "\"_ID_SHARE\" INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE ," + // 0: _id_share
                "\"GOODS_ID\" TEXT," + // 1: goods_id
                "\"GOODS_IMAGE\" TEXT," + // 2: goods_image
                "\"GOODS_NAME\" TEXT," + // 3: goods_name
                "\"PRICE\" INTEGER," + // 4: price
                "\"OWNER_ID\" TEXT," + // 5: owner_id
                "\"COMMENT_COUNT\" TEXT," + // 6: comment_count
                "\"LIKE_COUNT\" TEXT," + // 7: like_count
                "\"LIKED\" INTEGER," + // 8: liked
                "\"SALE_BY\" TEXT," + // 9: sale_by
                "\"GOODS_URL\" TEXT," + // 10: goods_url
                "\"IS_GIFT\" INTEGER," + // 11: is_gift
                "\"DISCOUNT_PRICE\" INTEGER," + // 12: discount_price
                "\"COUPON_FLAG\" INTEGER," + // 13: coupon_flag
                "\"PROMOTION_IMGURL\" TEXT);"); // 14: promotion_imgurl
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"SHARE_DATA_ETY\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, ShareDataEty entity) {
        stmt.clearBindings();
 
        Long _id_share = entity.get_id_share();
        if (_id_share != null) {
            stmt.bindLong(1, _id_share);
        }
 
        String goods_id = entity.getGoods_id();
        if (goods_id != null) {
            stmt.bindString(2, goods_id);
        }
 
        String goods_image = entity.getGoods_image();
        if (goods_image != null) {
            stmt.bindString(3, goods_image);
        }
 
        String goods_name = entity.getGoods_name();
        if (goods_name != null) {
            stmt.bindString(4, goods_name);
        }
 
        Integer price = entity.getPrice();
        if (price != null) {
            stmt.bindLong(5, price);
        }
 
        String owner_id = entity.getOwner_id();
        if (owner_id != null) {
            stmt.bindString(6, owner_id);
        }
 
        String comment_count = entity.getComment_count();
        if (comment_count != null) {
            stmt.bindString(7, comment_count);
        }
 
        String like_count = entity.getLike_count();
        if (like_count != null) {
            stmt.bindString(8, like_count);
        }
 
        Integer liked = entity.getLiked();
        if (liked != null) {
            stmt.bindLong(9, liked);
        }
 
        String sale_by = entity.getSale_by();
        if (sale_by != null) {
            stmt.bindString(10, sale_by);
        }
 
        String goods_url = entity.getGoods_url();
        if (goods_url != null) {
            stmt.bindString(11, goods_url);
        }
 
        Integer is_gift = entity.getIs_gift();
        if (is_gift != null) {
            stmt.bindLong(12, is_gift);
        }
 
        Integer discount_price = entity.getDiscount_price();
        if (discount_price != null) {
            stmt.bindLong(13, discount_price);
        }
 
        Boolean coupon_flag = entity.getCoupon_flag();
        if (coupon_flag != null) {
            stmt.bindLong(14, coupon_flag ? 1L: 0L);
        }
 
        String promotion_imgurl = entity.getPromotion_imgurl();
        if (promotion_imgurl != null) {
            stmt.bindString(15, promotion_imgurl);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public ShareDataEty readEntity(Cursor cursor, int offset) {
        ShareDataEty entity = new ShareDataEty( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // _id_share
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // goods_id
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // goods_image
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // goods_name
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // price
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // owner_id
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // comment_count
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // like_count
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // liked
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // sale_by
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // goods_url
            cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // is_gift
            cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12), // discount_price
            cursor.isNull(offset + 13) ? null : cursor.getShort(offset + 13) != 0, // coupon_flag
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14) // promotion_imgurl
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, ShareDataEty entity, int offset) {
        entity.set_id_share(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setGoods_id(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setGoods_image(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setGoods_name(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setPrice(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setOwner_id(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setComment_count(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setLike_count(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setLiked(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setSale_by(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setGoods_url(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setIs_gift(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
        entity.setDiscount_price(cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12));
        entity.setCoupon_flag(cursor.isNull(offset + 13) ? null : cursor.getShort(offset + 13) != 0);
        entity.setPromotion_imgurl(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(ShareDataEty entity, long rowId) {
        entity.set_id_share(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(ShareDataEty entity) {
        if(entity != null) {
            return entity.get_id_share();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
